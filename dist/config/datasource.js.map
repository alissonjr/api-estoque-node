{"version":3,"file":"datasource.js","sourceRoot":"","sources":["../../config/datasource.ts"],"names":[],"mappings":";;AAAA,qCAAwC;AACxC,uBAA0B;AAC1B,2BAA8B;AAE9B,IAAI,QAAQ,GAAQ,IAAI,CAAC;AAEzB,IAAM,UAAU,GAAG,UAAC,SAAoB;IACpC,IAAM,GAAG,GAAU,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;IACrD,IAAI,MAAM,GAAU,EAAE,CAAC;IACvB,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI;QAC5B,IAAM,QAAQ,GAAW,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC9C,IAAM,KAAK,GAAQ,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC9C,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IAC/B,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,MAAM,CAAC;AAClB,CAAC,CAAC;AAEF,mBAAwB,GAAG;IACvB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACZ,IAAM,MAAM,GAAQ,GAAG,CAAC,MAAM,CAAC;QAC/B,IAAM,SAAS,GAAQ,IAAI,SAAS,CAChC,MAAM,CAAC,QAAQ,EACf,MAAM,CAAC,QAAQ,EACf,MAAM,CAAC,QAAQ,EACf,MAAM,CAAC,MAAM,CAChB,CAAC;QAEF,QAAQ,GAAG;YACP,SAAS,WAAA,EAAE,SAAS,WAAA,EAAE,MAAM,EAAE,EAAE;SACnC,CAAC;QAEF,QAAQ,CAAC,MAAM,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;QAExC,SAAS,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,QAAQ,EAAR,CAAQ,CAAC,CAAC;IAC1C,CAAC;IACD,MAAM,CAAC,QAAQ,CAAC;AACpB,CAAC;AAnBD,4BAmBC","sourcesContent":["import Sequelize = require('sequelize');\r\nimport fs = require('fs');\r\nimport path = require('path');\r\n\r\nlet database: any = null;\r\n\r\nconst loadModels = (sequelize: Sequelize) => {\r\n    const dir:string = path.join(__dirname, '../models');\r\n    let models: any[] = [];\r\n    fs.readdirSync(dir).forEach(file => {\r\n        const modelDir: string = path.join(dir, file);\r\n        const model: any = sequelize.import(modelDir);\r\n        models[model.name] = model;\r\n    });\r\n    return models;\r\n};\r\n\r\nexport default function(app) {\r\n    if (!database) {\r\n        const config: any = app.config;\r\n        const sequelize: any = new Sequelize(\r\n            config.database,\r\n            config.username,\r\n            config.password,\r\n            config.params\r\n        );\r\n\r\n        database = {\r\n            sequelize, Sequelize, models: {}\r\n        };\r\n\r\n        database.models = loadModels(sequelize);\r\n\r\n        sequelize.sync().done(() => database);\r\n    }\r\n    return database;\r\n}"]}